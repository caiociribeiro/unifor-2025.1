# criar uma tabela so com frequencia simples e relativa
tabela = table(data$`Raça da Vítima`)
tabela = as.data.frame(tabela)
data.fram
data.fram
attach(data)
library(readxl)
Base2025_1 <- read_excel("Base2025.1.xlsx")
View(Base2025_1)
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
# Frequência simples e relativa para "Natureza"
freq_natureza <- table(`Natureza`)
rel_natureza  <- prop.table(freq_natureza)
View(Base2025_1)
View(Base2025_1)
View(Base2025_1)
View(Base2025_1)
library(readxl)
data <- read_excel("data.xlsx")
View(data)
m
m
data.frame(data)
attach(data)
# Frequência simples e relativa para "Natureza"
freq_natureza <- table(`Natureza`)
rel_natureza  <- prop.table(freq_natureza)
print(freq_natureza)
print(rel_natureza)
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
library(xtable)
library(xtable)
# Função para gerar tabela em LaTeX para uma variável
geraTabelaLatex <- function(variavel, nome_variavel) {
# Cria a tabela de frequência simples
freq <- table(variavel)
# Calcula as frequências relativas (em porcentagem)
rel <- round(prop.table(freq) * 100, 2)
# Cria um data frame com as categorias, frequências e frequências relativas
df <- data.frame(
Categoria = names(freq),
Frequencia = as.numeric(freq),
Frequencia_Relativa = as.numeric(rel)
)
# Gera e imprime o código LaTeX para a tabela
print(xtable(df, caption = paste("Frequências para", nome_variavel)),
include.rownames = FALSE)
cat("\n\n")
}
geraTabelaLatex(`Natureza`, "Natureza")
geraTabelaLatex(`Meio Empregado`, "Meio Empregado")
geraTabelaLatex(`Gênero`, "Gênero")
geraTabelaLatex(`Escolaridade da Vítima`, "Escolaridade da Vítima")
geraTabelaLatex(`Raça da Vítima`, "Raça da Vítima")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
# Função para gerar somente o ambiente tabular em LaTeX
geraTabelaLatex <- function(variavel, nome_variavel) {
# Cria a tabela de frequência simples
freq <- table(variavel)
# Calcula as frequências relativas (em porcentagem)
rel <- round(prop.table(freq) * 100, 2)
# Cria um data frame com as categorias, frequências e frequências relativas
df <- data.frame(
Categoria = names(freq),
Frequencia = as.numeric(freq),
Frequencia_Relativa = as.numeric(rel)
)
# Gera e imprime apenas o ambiente tabular (sem table e caption)
print(xtable(df, caption = paste("Frequências para", nome_variavel)),
include.rownames = FALSE,
floating = FALSE)
cat("\n\n")
}
geraTabelaLatex(`Natureza`, "Natureza")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
# Função para gerar apenas o ambiente 'tabular' com a formatação compatível com o modelo do Overleaf
geraTabelaLatex <- function(variavel, nome_variavel) {
# Cria a tabela de frequência simples e relativa
freq <- table(variavel)
rel <- round(prop.table(freq) * 100, 2)
# Data frame com os dados para a tabela
df <- data.frame(
Categoria = names(freq),
Frequência = as.numeric(freq),
`Frequência Relativa (\%)` = as.numeric(rel)
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
geraTabelaLatex(`Natureza`, "Natureza")
geraTabelaLatex(`Meio Empregado`, "Meio Empregado")
View(geraTabelaLatex)
geraTabelaLatex(`Meio Empregado`, "Meio Empregado")
geraTabelaLatex(`Gênero`, "Gênero")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
geraTabelaRStudio <- function(variavel, nome_variavel) {
# Cria a tabela de frequência simples e relativa
freq <- table(variavel)
rel <- round(prop.table(freq) * 100, 2)
# Data frame com os dados formatados
df <- data.frame(
Categoria = names(freq),
Frequência = as.numeric(freq),
`Frequência Relativa (%)` = as.numeric(rel)
)
# Exibe a tabela no console formatada com kable()
cat("\n", nome_variavel, "\n")
print(kable(df, format = "pipe", align = c("l", "r", "r")))
}
# Chamar para cada variável
geraTabelaRStudio(data$Natureza, "Natureza")
library(knitr)
library(knitr)
geraTabelaRStudio <- function(variavel, nome_variavel) {
# Cria a tabela de frequência simples e relativa
freq <- table(variavel)
rel <- round(prop.table(freq) * 100, 2)
# Data frame com os dados formatados
df <- data.frame(
Categoria = names(freq),
Frequência = as.numeric(freq),
`Frequência Relativa (%)` = as.numeric(rel)
)
# Exibe a tabela no console formatada com kable()
cat("\n", nome_variavel, "\n")
print(kable(df, format = "pipe", align = c("l", "r", "r")))
}
# Chamar para cada variável
geraTabelaRStudio(data$Natureza, "Natureza")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
View(geraCSV)
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
# Criar CSVs para cada variável
geraTabela(data$Natureza, "tabela_natureza")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
df <- data.frame(
Categoria = names(freq),
Frequência = as.numeric(freq),
`Frequência Relativa` = as.numeric(rel)
)
# Criar CSVs para cada variável
geraTabela(data$Natureza, "tabela_natureza")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
clear
# Criar CSVs para cada variável
geraTabela(data$Natureza, "tabela_natureza")
geraTabela(data$`Meio Empregado`, "tabela_meio_empregado")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
source("C:/Users/Caio/unifor/2025.1/met-quant-computacao/trabalho-av1/dados-av1.R")
geraTabela(data$`Meio Empregado`, "tabela_meio_empregado")
